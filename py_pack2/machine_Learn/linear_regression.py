# !pip install pandas==1.3.4
# !pip install scikit-learn==1.0.2
# !pip install numpy==1.21.6
import warnings
import pandas as pd
import matplotlib.pyplot as plt

from sklearn.linear_model import LinearRegression


# You can also use this section to suppress warnings generated by your code:
def warn(*args, **kwargs):
    pass


warnings.warn = warn
warnings.filterwarnings('ignore')

# the data set is available at the url below.
URL = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-BD0231EN-SkillsNetwork/datasets/mpg.csv"

# using the read_csv function in the pandas library, we load the data into a dataframe.
df = pd.read_csv(URL)
# print(df.sample(5))
# print(df.shape)
df.plot.scatter(x="Horsepower", y="MPG")  # 这个展示不出来
# plt.show() ##这个展示散点图
## Task 2 - Identify the target column and the data columns

target = df["MPG"]
features = df[["Horsepower", "Weight"]]
print(features.sample(5))
## Task 3 - Build and Train a Linear Regression Model
lr = LinearRegression()
lr.fit(features, target)
## Task 4 - Evaluate the model and make predictions
##Your model is now trained. Time to evaluate the model.
lr.score(features, target)
##Make predictions. Let us predict the mileage for a car with HorsePower = 100 and Weight = 2000
print(lr.predict([[100, 2000]]))  # 预测结果是[29.3216098]
##Exercises
URL2 = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-BD0231EN-SkillsNetwork/datasets/diamonds.csv"
df2 = pd.read_csv(URL2)
target = df2["price"]
features = df2[["carat", "depth"]]
##Build and Train a new Linear Regression Model
lr2 = LinearRegression()
lr2.fit(features, target)
#Evaluate the model
lr2.score(features,target)

print(lr2.predict([[0.3, 60]]))
